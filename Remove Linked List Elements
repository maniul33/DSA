/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeElements(ListNode* head, int val) {

        if(head == NULL)
        {
            return head;
        }

        while(head->val == val)
        {
            head = head->next;

            if(head == NULL)
            {
                return head;
            }
        }

        ListNode* currentNode = head;

        while(currentNode != NULL)
        {
            if(currentNode->next != NULL && currentNode->next->val == val)
            {
                ListNode* tempNode = currentNode->next;
                currentNode->next = tempNode->next;
                delete tempNode;
            }
            else
            {
                currentNode = currentNode->next;
            }
        }

        return head;     
    }
};
