/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>> answer;
        if(!root)
        {
            return answer;
        }
        queue<TreeNode *> q;
        q.push(root);
        bool rightToLeft = false;
        while(!q.empty())
        {
            int size = q.size();
            vector<int> currentLevel;
            while(size--)
            {
                auto a = q.front();
                q.pop();
                if(rightToLeft)
                {
                    currentLevel.insert(currentLevel.begin(),a->val);
                }
                else{
                    currentLevel.push_back(a->val);
                }
                if(a->left)
                {
                    q.push(a->left);
                }
                if(a->right)
                {
                    q.push(a->right);
                }
            }
            answer.push_back(currentLevel);
            rightToLeft = !rightToLeft;
        }
        return answer;
    }
};
